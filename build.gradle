plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
  mavenCentral()
}

dependencies {
  annotationProcessor include("io.javalin.community.openapi:openapi-annotation-processor:$project.javalin_version")

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  implementation include("io.javalin:javalin:$project.javalin_version")

  implementation include("io.javalin.community.openapi:javalin-openapi-plugin:$project.javalin_version") // for /openapi route with JSON scheme
  implementation include("io.javalin.community.openapi:javalin-swagger-plugin:$project.javalin_version") // for Swagger UI
  implementation include("io.javalin.community.openapi:javalin-redoc-plugin:$project.javalin_version") // for ReDoc UI
  implementation include("org.jetbrains.kotlin:kotlin-stdlib:1.4.10")
  implementation include("jakarta.servlet:jakarta.servlet-api:5.0.0")
  implementation include("org.eclipse.jetty:jetty-server:11.0.2")
  implementation include("org.eclipse.jetty:jetty-servlet:11.0.2")
  implementation include("org.eclipse.jetty:jetty-security:11.0.2")
  implementation include("org.eclipse.jetty:jetty-io:11.0.2")
  implementation include("org.eclipse.jetty:jetty-util:11.0.2")
  implementation include("org.eclipse.jetty:jetty-http:11.0.2")
  implementation include("org.eclipse.jetty:jetty-webapp:11.0.2")
  implementation include("org.eclipse.jetty.http2:http2-server:11.0.2")
  implementation include("org.eclipse.jetty.websocket:websocket-jetty-api:11.0.2")
  implementation include("org.eclipse.jetty.websocket:websocket-jetty-server:11.0.2")
  implementation include("org.eclipse.jetty.websocket:websocket-jetty-common:11.0.2")
  implementation include("org.eclipse.jetty.websocket:websocket-core-server:11.0.2")
  implementation include("org.eclipse.jetty.websocket:websocket-core-common:11.0.2")
  implementation include("com.fasterxml.jackson.core:jackson-databind:2.13.4")
  implementation include("com.fasterxml.jackson.core:jackson-core:2.13.4")
  implementation include("com.fasterxml.jackson.core:jackson-annotations:2.13.4")
}

task showMeCache doLast() {
    configurations.compileClasspath.each { println it }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
